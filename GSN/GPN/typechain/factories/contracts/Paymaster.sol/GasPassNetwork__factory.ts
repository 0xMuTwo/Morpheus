/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  GasPassNetwork,
  GasPassNetworkInterface,
} from "../../../contracts/Paymaster.sol/GasPassNetwork";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasUsed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "TransactionPaid",
    type: "event",
  },
  {
    inputs: [],
    name: "CALLDATA_SIZE_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FORWARDER_HUB_OVERHEAD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAYMASTER_ACCEPTANCE_BUDGET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POST_RELAYED_CALL_GAS_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRE_RELAYED_CALL_GAS_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGasAndDataLimits",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "acceptanceBudget",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preRelayedCallGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "postRelayedCallGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "calldataSizeLimit",
            type: "uint256",
          },
        ],
        internalType: "struct IPaymaster.GasAndDataLimits",
        name: "limits",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRelayHub",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTrustedForwarder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "gasUseWithoutPost",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "transactionCalldataGasUsed",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "relayWorker",
            type: "address",
          },
          {
            internalType: "address",
            name: "paymaster",
            type: "address",
          },
          {
            internalType: "address",
            name: "forwarder",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "paymasterData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "clientId",
            type: "uint256",
          },
        ],
        internalType: "struct GsnTypes.RelayData",
        name: "relayData",
        type: "tuple",
      },
    ],
    name: "postRelayedCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "from",
                type: "address",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "gas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "validUntilTime",
                type: "uint256",
              },
            ],
            internalType: "struct IForwarder.ForwardRequest",
            name: "request",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "transactionCalldataGasUsed",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "relayWorker",
                type: "address",
              },
              {
                internalType: "address",
                name: "paymaster",
                type: "address",
              },
              {
                internalType: "address",
                name: "forwarder",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "paymasterData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "clientId",
                type: "uint256",
              },
            ],
            internalType: "struct GsnTypes.RelayData",
            name: "relayData",
            type: "tuple",
          },
        ],
        internalType: "struct GsnTypes.RelayRequest",
        name: "relayRequest",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "approvalData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "maxPossibleGas",
        type: "uint256",
      },
    ],
    name: "preRelayedCall",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRelayHub",
        name: "hub",
        type: "address",
      },
    ],
    name: "setRelayHub",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "setTrustedForwarder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "versionPaymaster",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "target",
        type: "address",
      },
    ],
    name: "withdrawRelayHubDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b612122806200010e6000396000f3fe60806040526004361061010c5760003560e01c8063921276ea11610095578063ce1b815f11610064578063ce1b815f1461046c578063da74222814610497578063df463a66146104c0578063f2fde38b146104eb578063f9c002f7146105145761022d565b8063921276ea146103c0578063b039a88f146103eb578063b90b41cf14610416578063bbdaa3c9146104415761022d565b8063715018a6116100dc578063715018a61461030157806376fa01c3146103185780637bb05264146103415780637bdf2ec71461036a5780638da5cb5b146103955761022d565b8062be5dd41461023257806301ffc9a7146102705780632d14c4b7146102ad5780635c5e3db1146102d65761022d565b3661022d57600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036101a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101999061127e565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aa67c91934306040518363ffffffff1660e01b81526004016101fe91906112df565b6000604051808303818588803b15801561021757600080fd5b505af115801561022b573d6000803e3d6000fd5b005b600080fd5b34801561023e57600080fd5b50610259600480360381019061025491906113c3565b61053f565b604051610267929190611531565b60405180910390f35b34801561027c57600080fd5b50610297600480360381019061029291906115b9565b61058d565b6040516102a491906115e6565b60405180910390f35b3480156102b957600080fd5b506102d460048036038101906102cf919061163f565b61066f565b005b3480156102e257600080fd5b506102eb61070a565b6040516102f8919061168e565b60405180910390f35b34801561030d57600080fd5b50610316610710565b005b34801561032457600080fd5b5061033f600480360381019061033a91906116f5565b610724565b005b34801561034d57600080fd5b50610368600480360381019061036391906117d7565b610740565b005b34801561037657600080fd5b5061037f610814565b60405161038c91906112df565b60405180910390f35b3480156103a157600080fd5b506103aa61083e565b6040516103b791906112df565b60405180910390f35b3480156103cc57600080fd5b506103d5610867565b6040516103e29190611848565b60405180910390f35b3480156103f757600080fd5b50610400610887565b60405161040d91906118ce565b60405180910390f35b34801561042257600080fd5b5061042b6108cd565b604051610438919061168e565b60405180910390f35b34801561044d57600080fd5b506104566108d3565b604051610463919061168e565b60405180910390f35b34801561047857600080fd5b506104816108da565b60405161048e91906112df565b60405180910390f35b3480156104a357600080fd5b506104be60048036038101906104b99190611915565b610904565b005b3480156104cc57600080fd5b506104d56109d8565b6040516104e2919061168e565b60405180910390f35b3480156104f757600080fd5b50610512600480360381019061050d9190611915565b6109ec565b005b34801561052057600080fd5b50610529610a6f565b604051610536919061168e565b60405180910390f35b6060600061054b610a76565b61055488610aed565b61055d88610b8f565b61056688610be8565b6105708585610c4e565b61057e888888888888610c98565b91509150965096945050505050565b60007fe1ab2dea000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061065857507f0e083076000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610668575061066782610cbd565b5b9050919050565b610677610d27565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f3fef3a382846040518363ffffffff1660e01b81526004016106d4929190611951565b600060405180830381600087803b1580156106ee57600080fd5b505af1158015610702573d6000803e3d6000fd5b505050505050565b61290481565b610718610d27565b6107226000610da5565b565b61072c610a76565b6107398585858585610e69565b5050505050565b610748610d27565b6107917fe9fb30f7000000000000000000000000000000000000000000000000000000008273ffffffffffffffffffffffffffffffffffffffff16610ec090919063ffffffff16565b6107d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c7906119c6565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606040518060600160405280602e81526020016120bf602e9139905090565b61088f6111f9565b604051806080016040528061c350620186a06108ab9190611a15565b8152602001620186a081526020016201adb08152602001612904815250905090565b61c35081565b6201adb081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61090c610d27565b6109557f25e23e64000000000000000000000000000000000000000000000000000000008273ffffffffffffffffffffffffffffffffffffffff16610ec090919063ffffffff16565b610994576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098b90611a95565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61c350620186a06109e99190611a15565b81565b6109f4610d27565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5a90611b27565b60405180910390fd5b610a6c81610da5565b50565b620186a081565b610a7e610814565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610aeb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae290611b93565b60405180910390fd5b565b808060200190610afd9190611bc2565b60a0016020810190610b0f9190611915565b73ffffffffffffffffffffffffffffffffffffffff16610b2d6108da565b73ffffffffffffffffffffffffffffffffffffffff1614610b83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7a90611c37565b60405180910390fd5b610b8c81610ee5565b50565b6000818060000190610ba19190611c57565b6040013514610be5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bdc90611ccb565b60405180910390fd5b50565b6000818060200190610bfa9190611bc2565b8060c00190610c099190611ceb565b905014610c4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4290611d9a565b60405180910390fd5b50565b60008282905014610c94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8b90611e06565b60405180910390fd5b5050565b6060600080604051806020016040528060008152509091509150965096945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610d2f6110e5565b73ffffffffffffffffffffffffffffffffffffffff16610d4d61083e565b73ffffffffffffffffffffffffffffffffffffffff1614610da3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9a90611e72565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b3373ffffffffffffffffffffffffffffffffffffffff167f7f3071d3d1177130ff1f8166bd122d9fdfb89cbc1c777f9523d70217b64242fc8342604051610eb1929190611e92565b60405180910390a25050505050565b6000610ecb836110ed565b8015610edd5750610edc838361113a565b5b905092915050565b600080828060000190610ef89190611c57565b6020016020810190610f0a9190611915565b73ffffffffffffffffffffffffffffffffffffffff1663572b6c0560e01b848060200190610f389190611bc2565b60a0016020810190610f4a9190611915565b604051602401610f5a91906112df565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610fc49190611ef7565b600060405180830381855afa9150503d8060008114610fff576040519150601f19603f3d011682016040523d82523d6000602084013e611004565b606091505b509150915081611049576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104090611f5a565b60405180910390fd5b602081511461108d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108490611fc6565b60405180910390fd5b808060200190518101906110a19190611ffb565b6110e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d790612074565b60405180910390fd5b505050565b600033905090565b6000611119827f01ffc9a70000000000000000000000000000000000000000000000000000000061113a565b801561113357506111318263ffffffff60e01b61113a565b155b9050919050565b6000806301ffc9a760e01b8360405160240161115691906120a3565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000806000602060008551602087018a617530fa92503d915060005190508280156111e1575060208210155b80156111ed5750600081115b94505050505092915050565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b600082825260208201905092915050565b7f72656c6179206875622061646472657373206e6f742073657400000000000000600082015250565b6000611268601983611221565b915061127382611232565b602082019050919050565b600060208201905081810360008301526112978161125b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112c98261129e565b9050919050565b6112d9816112be565b82525050565b60006020820190506112f460008301846112d0565b92915050565b600080fd5b600080fd5b600080fd5b60006040828403121561131f5761131e611304565b5b81905092915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261134d5761134c611328565b5b8235905067ffffffffffffffff81111561136a5761136961132d565b5b60208301915083600182028301111561138657611385611332565b5b9250929050565b6000819050919050565b6113a08161138d565b81146113ab57600080fd5b50565b6000813590506113bd81611397565b92915050565b600080600080600080608087890312156113e0576113df6112fa565b5b600087013567ffffffffffffffff8111156113fe576113fd6112ff565b5b61140a89828a01611309565b965050602087013567ffffffffffffffff81111561142b5761142a6112ff565b5b61143789828a01611337565b9550955050604087013567ffffffffffffffff81111561145a576114596112ff565b5b61146689828a01611337565b9350935050606061147989828a016113ae565b9150509295509295509295565b600081519050919050565b600082825260208201905092915050565b60005b838110156114c05780820151818401526020810190506114a5565b60008484015250505050565b6000601f19601f8301169050919050565b60006114e882611486565b6114f28185611491565b93506115028185602086016114a2565b61150b816114cc565b840191505092915050565b60008115159050919050565b61152b81611516565b82525050565b6000604082019050818103600083015261154b81856114dd565b905061155a6020830184611522565b9392505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61159681611561565b81146115a157600080fd5b50565b6000813590506115b38161158d565b92915050565b6000602082840312156115cf576115ce6112fa565b5b60006115dd848285016115a4565b91505092915050565b60006020820190506115fb6000830184611522565b92915050565b600061160c8261129e565b9050919050565b61161c81611601565b811461162757600080fd5b50565b60008135905061163981611613565b92915050565b60008060408385031215611656576116556112fa565b5b6000611664858286016113ae565b92505060206116758582860161162a565b9150509250929050565b6116888161138d565b82525050565b60006020820190506116a3600083018461167f565b92915050565b6116b281611516565b81146116bd57600080fd5b50565b6000813590506116cf816116a9565b92915050565b600061010082840312156116ec576116eb611304565b5b81905092915050565b600080600080600060808688031215611711576117106112fa565b5b600086013567ffffffffffffffff81111561172f5761172e6112ff565b5b61173b88828901611337565b9550955050602061174e888289016116c0565b935050604061175f888289016113ae565b925050606086013567ffffffffffffffff8111156117805761177f6112ff565b5b61178c888289016116d5565b9150509295509295909350565b60006117a4826112be565b9050919050565b6117b481611799565b81146117bf57600080fd5b50565b6000813590506117d1816117ab565b92915050565b6000602082840312156117ed576117ec6112fa565b5b60006117fb848285016117c2565b91505092915050565b600081519050919050565b600061181a82611804565b6118248185611221565b93506118348185602086016114a2565b61183d816114cc565b840191505092915050565b60006020820190508181036000830152611862818461180f565b905092915050565b6118738161138d565b82525050565b60808201600082015161188f600085018261186a565b5060208201516118a2602085018261186a565b5060408201516118b5604085018261186a565b5060608201516118c8606085018261186a565b50505050565b60006080820190506118e36000830184611879565b92915050565b6118f2816112be565b81146118fd57600080fd5b50565b60008135905061190f816118e9565b92915050565b60006020828403121561192b5761192a6112fa565b5b600061193984828501611900565b91505092915050565b61194b81611601565b82525050565b60006040820190506119666000830185611942565b611973602083018461167f565b9392505050565b7f746172676574206973206e6f7420612076616c6964204952656c617948756200600082015250565b60006119b0601f83611221565b91506119bb8261197a565b602082019050919050565b600060208201905081810360008301526119df816119a3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a208261138d565b9150611a2b8361138d565b9250828201905080821115611a4357611a426119e6565b5b92915050565b7f746172676574206973206e6f7420612076616c69642049466f72776172646572600082015250565b6000611a7f602083611221565b9150611a8a82611a49565b602082019050919050565b60006020820190508181036000830152611aae81611a72565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611b11602683611221565b9150611b1c82611ab5565b604082019050919050565b60006020820190508181036000830152611b4081611b04565b9050919050565b7f63616e206f6e6c792062652063616c6c65642062792052656c61794875620000600082015250565b6000611b7d601e83611221565b9150611b8882611b47565b602082019050919050565b60006020820190508181036000830152611bac81611b70565b9050919050565b600080fd5b600080fd5b600080fd5b60008235600161010003833603038112611bdf57611bde611bb3565b5b80830191505092915050565b7f466f72776172646572206973206e6f7420747275737465640000000000000000600082015250565b6000611c21601883611221565b9150611c2c82611beb565b602082019050919050565b60006020820190508181036000830152611c5081611c14565b9050919050565b60008235600160e003833603038112611c7357611c72611bb3565b5b80830191505092915050565b7f76616c7565207472616e73666572206e6f7420737570706f7274656400000000600082015250565b6000611cb5601c83611221565b9150611cc082611c7f565b602082019050919050565b60006020820190508181036000830152611ce481611ca8565b9050919050565b60008083356001602003843603038112611d0857611d07611bb3565b5b80840192508235915067ffffffffffffffff821115611d2a57611d29611bb8565b5b602083019250600182023603831315611d4657611d45611bbd565b5b509250929050565b7f73686f756c642068617665206e6f207061796d61737465724461746100000000600082015250565b6000611d84601c83611221565b9150611d8f82611d4e565b602082019050919050565b60006020820190508181036000830152611db381611d77565b9050919050565b7f73686f756c642068617665206e6f20617070726f76616c446174610000000000600082015250565b6000611df0601b83611221565b9150611dfb82611dba565b602082019050919050565b60006020820190508181036000830152611e1f81611de3565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611e5c602083611221565b9150611e6782611e26565b602082019050919050565b60006020820190508181036000830152611e8b81611e4f565b9050919050565b6000604082019050611ea7600083018561167f565b611eb4602083018461167f565b9392505050565b600081905092915050565b6000611ed182611486565b611edb8185611ebb565b9350611eeb8185602086016114a2565b80840191505092915050565b6000611f038284611ec6565b915081905092915050565b7f697354727573746564466f727761726465723a20726576657274656400000000600082015250565b6000611f44601c83611221565b9150611f4f82611f0e565b602082019050919050565b60006020820190508181036000830152611f7381611f37565b9050919050565b7f697354727573746564466f727761726465723a2062616420726573706f6e7365600082015250565b6000611fb0602083611221565b9150611fbb82611f7a565b602082019050919050565b60006020820190508181036000830152611fdf81611fa3565b9050919050565b600081519050611ff5816116a9565b92915050565b600060208284031215612011576120106112fa565b5b600061201f84828501611fe6565b91505092915050565b7f696e76616c696420666f7277617264657220666f7220726563697069656e7400600082015250565b600061205e601f83611221565b915061206982612028565b602082019050919050565b6000602082019050818103600083015261208d81612051565b9050919050565b61209d81611561565b82525050565b60006020820190506120b86000830184612094565b9291505056fe332e302e302d626574612e332b6f70656e67736e2e676173706173736e6574776f726b2e697061796d6173746572a2646970667358221220664787585c63c3f58cef521cb8236abb992f0a289a5fa1fa2519a76481b7361364736f6c63430008120033";

type GasPassNetworkConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GasPassNetworkConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GasPassNetwork__factory extends ContractFactory {
  constructor(...args: GasPassNetworkConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GasPassNetwork> {
    return super.deploy(overrides || {}) as Promise<GasPassNetwork>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GasPassNetwork {
    return super.attach(address) as GasPassNetwork;
  }
  override connect(signer: Signer): GasPassNetwork__factory {
    return super.connect(signer) as GasPassNetwork__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GasPassNetworkInterface {
    return new utils.Interface(_abi) as GasPassNetworkInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GasPassNetwork {
    return new Contract(address, _abi, signerOrProvider) as GasPassNetwork;
  }
}
