/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NumericalStorage,
  NumericalStorageInterface,
} from "../../contracts/NumericalStorage";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "oldValue",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "ValueStored",
    type: "event",
  },
  {
    inputs: [],
    name: "getTrustedForwarder",
    outputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "storeValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "storedValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516109dd3803806109dd8339818101604052810190610032919061027e565b61004e61004361006360201b60201c565b61007c60201b60201c565b61005d8161014260201b60201c565b506102ab565b600061007761018560201b6102d71760201c565b905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060146000369050101580156101a757506101a6336101c260201b60201c565b5b156101bb57601436033560601c90506101bf565b3390505b90565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061024b82610220565b9050919050565b61025b81610240565b811461026657600080fd5b50565b60008151905061027881610252565b92915050565b6000602082840312156102945761029361021b565b5b60006102a284828501610269565b91505092915050565b610723806102ba6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637221a26a1161005b5780637221a26a146100da5780638da5cb5b146100f6578063ce1b815f14610114578063f2fde38b146101325761007d565b8063572b6c05146100825780636d619daa146100b2578063715018a6146100d0575b600080fd5b61009c600480360381019061009791906104c4565b61014e565b6040516100a9919061050c565b60405180910390f35b6100ba6101a7565b6040516100c79190610540565b60405180910390f35b6100d86101ad565b005b6100f460048036038101906100ef9190610587565b6101c1565b005b6100fe610201565b60405161010b91906105c3565b60405180910390f35b61011c61022b565b60405161012991906105c3565b60405180910390f35b61014c600480360381019061014791906104c4565b610254565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b60025481565b6101b561030e565b6101bf600061038c565b565b600060025490508160028190555081817f310f8ed862379d5c76886cc6d311ff93d07260f8609687c75d38a3916f469b5560405160405180910390a35050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61025c61030e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c290610661565b60405180910390fd5b6102d48161038c565b50565b600060146000369050101580156102f357506102f23361014e565b5b1561030757601436033560601c905061030b565b3390505b90565b610316610452565b73ffffffffffffffffffffffffffffffffffffffff16610334610201565b73ffffffffffffffffffffffffffffffffffffffff161461038a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610381906106cd565b60405180910390fd5b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600061045c6102d7565b905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061049182610466565b9050919050565b6104a181610486565b81146104ac57600080fd5b50565b6000813590506104be81610498565b92915050565b6000602082840312156104da576104d9610461565b5b60006104e8848285016104af565b91505092915050565b60008115159050919050565b610506816104f1565b82525050565b600060208201905061052160008301846104fd565b92915050565b6000819050919050565b61053a81610527565b82525050565b60006020820190506105556000830184610531565b92915050565b61056481610527565b811461056f57600080fd5b50565b6000813590506105818161055b565b92915050565b60006020828403121561059d5761059c610461565b5b60006105ab84828501610572565b91505092915050565b6105bd81610486565b82525050565b60006020820190506105d860008301846105b4565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061064b6026836105de565b9150610656826105ef565b604082019050919050565b6000602082019050818103600083015261067a8161063e565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006106b76020836105de565b91506106c282610681565b602082019050919050565b600060208201905081810360008301526106e6816106aa565b905091905056fea264697066735822122086d07bd98a82218881244d6d54598df328695f14023e1408ab4499bf9eb10df464736f6c63430008120033";

type NumericalStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NumericalStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NumericalStorage__factory extends ContractFactory {
  constructor(...args: NumericalStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    forwarder: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NumericalStorage> {
    return super.deploy(
      forwarder,
      overrides || {}
    ) as Promise<NumericalStorage>;
  }
  override getDeployTransaction(
    forwarder: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(forwarder, overrides || {});
  }
  override attach(address: string): NumericalStorage {
    return super.attach(address) as NumericalStorage;
  }
  override connect(signer: Signer): NumericalStorage__factory {
    return super.connect(signer) as NumericalStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NumericalStorageInterface {
    return new utils.Interface(_abi) as NumericalStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NumericalStorage {
    return new Contract(address, _abi, signerOrProvider) as NumericalStorage;
  }
}
